[user]
	name = Danny Edel
	email = mail@danny-edel.de
[alias]
	ci = commit --verbose --verbose
	st = status
	fa = fetch --all -p
	pull = pull --ff-only
	d = diff --no-ext-diff
	dw= diff --no-ext-diff --word-diff=color
	dd = diff --no-index --textconv --
	dc = diff --no-ext-diff --cached
	br = branch -vva
	# crev: Current revision
	crev = log --oneline -1
[merge]
	ff = false
[pull]
	ff = only
[merge "dpkg-mergechangelogs"]
	name = debian/changelog merge driver
	driver = dpkg-mergechangelogs -m %O %A %B %A
[core]
	eol = lf
	autocrlf = input
	safecrlf = warn
	attributesfile = ~/.gitattributes
	whitespace = space-before-tab,trailing-space,tabwidth=4
	excludesfile = ~/.gitignore_global
[color]
	ui = true
[grep]
	lineNumber = true
	extendedRegexp = true
[diff]
	ws-error-highlight = new,old,context
	tool = diffoscope-html
[diff "sqlite3dump"]
	textconv=sqlite3dump
[diff "openDocument"]
	textconv=odt2txt
[diff "unifi-backup"]
	textconv=textconv-unifi
[diff "pdf"]
	textconv=~/bin/pdftotextstdout
[diff "gpg"]
	textconv=gpg2 --decrypt --quiet
[diff "sqlite3"]
	textconv=sqlite3 --cmd .dump < /dev/null
[diff "gpginspect"]
	textconv=~/bin/gpg-inspect
[diff "image"]
	command=~/bin/imagediff
	textconv=~/bin/exiftoolnofilename
[filter "nleof"]
	# found at http://unix.stackexchange.com/questions/31947/how-to-add-a-newline-to-the-end-of-a-file
	clean=sed -e '$a\\'
	smudge=cat
# Sort numerically, -V makes alpha100 sort after alpha20
[filter "sort"]
	clean=sort --version-sort
	smudge=cat
[difftool "diffoscope"]
	cmd=diffoscope $LOCAL $REMOTE
[difftool "diffoscope-html"]
	cmd=~/bin/diffoscope-html $LOCAL $REMOTE
[merge]
	tool = kdiff3
[mergetool]
	keepBackup = false
[url "git@github.com:"]
	pushInsteadOf = git://github.com/
	pushInsteadOf = https://github.com/
[url "git@gist.github.com:"]
	pushInsteadOf = https://gist.github.com/
[url "git.debian.org:/git/"]
	pushInsteadOf = git://git.debian.org/
	pushInsteadOf = git://anonscm.debian.org/
	pushInsteadOf = https://anonscm.debian.org/git/
[push]
	default = matching
	recurseSubmodules = on-demand
[commit]
	verbose = 1
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
